package com.company;
import java.util.HashMap;
import java.util.Map;

/* Удалить людей, имеющих одинаковые имена
Создать словарь (Map<String, String>) занести в него десять записей по принципу «фамилия» - «имя».
Удалить людей, имеющих одинаковые имена.
*/

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Collections;
import java.util.Date;
import java.util.*;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.HashMap;

public class Main {

public static void main(String[] args) throws Exception
{
    Set set = createMap().entrySet();
    for (Object o : set)
    {
        System.out.println(o);
    }
}
    public static HashMap<String, String> createMap()
    {
        Map map = new HashMap();
        map.put("Иванов", "Иван");
        map.put("Степанов", "Степан");
        map.put("Андреев", "Андрей");
        map.put("Щербаков", "Иван");
        map.put("Жуков", "Степан");

        removeTheFirstNameDuplicates((HashMap<String, String>) map);

        return (HashMap<String, String>) map;
    }

    public static void removeTheFirstNameDuplicates(HashMap map)
    {
       HashMap<String, String> copy = new HashMap<String, String>(map);
       HashMap<String, String> newMap = new HashMap<String, String>();

       for (Map.Entry<String, String> pair : copy.entrySet())
       {
           if(newMap.containsValue(pair.getValue()))
               removeItemFromMapByValue(map, pair.getValue());
           newMap.put(pair.getKey(), pair.getValue());
      }
    }

    public static void removeItemFromMapByValue(HashMap<String, String> map, String value)
    {
        HashMap<String, String> copy = new HashMap<String, String>(map);
        for (Map.Entry<String, String> pair: copy.entrySet())
        {
            if (pair.getValue().equals(value))
                map.remove(pair.getKey());
        }
    }
}
