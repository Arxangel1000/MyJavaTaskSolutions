package com.company;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

/* Вся семья в сборе
1. Создай класс Human с полями имя (String), пол (boolean), возраст (int), дети (ArrayList<Human>).
2. Создай объекты и заполни их так, чтобы получилось: два дедушки, две бабушки, отец, мать, трое детей.
3. Вывести все объекты Human на экран.
*/

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Collections;
import java.util.Date;
import java.util.*;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.HashMap;

public class Main {

        public static void main(String[] args)
        {
            List<Human> human = new ArrayList<Human>();

            List GrandFather1Childrens = new ArrayList();
            List GrandMother1Childrens = new ArrayList();
            List GrandFather2Childrens = new ArrayList();
            List GrandMother2Childrens = new ArrayList();
            List FatherChildrens = new ArrayList();
            List MotherChildrens = new ArrayList();
            List ChildsChildrens = new ArrayList();

            Human GrandFather1 = new Human("GrandFather1", true, 80, GrandFather1Childrens);
            Human GrandMother1 = new Human("GrandMother1", false, 75, GrandMother1Childrens);
            Human GrandFather2 = new Human("GrandFather2", true, 75, GrandFather2Childrens);
            Human GrandMother2 = new Human("GrandMother2", false, 75, GrandMother2Childrens);
            Human Father = new Human("Father", true, 35, FatherChildrens);
            Human Mother = new Human("Mother", false, 35, MotherChildrens);
            Human child1 = new Human("child1", false, 15, ChildsChildrens);
            Human child2 = new Human("child2", true, 13, ChildsChildrens);
            Human child3 = new Human("child3", false, 12, ChildsChildrens);

            GrandFather1Childrens.add(Father);
            GrandMother1Childrens.add(Father);

            GrandFather2Childrens.add(Mother);
            GrandMother2Childrens.add(Mother);

            FatherChildrens.add(child1);
            FatherChildrens.add(child2);
            FatherChildrens.add(child3);

            MotherChildrens.add(child1);
            MotherChildrens.add(child2);
            MotherChildrens.add(child3);

            System.out.println();
            System.out.println(GrandFather1.toString());
            System.out.println(GrandMother1.toString());
            System.out.println();
            System.out.println(GrandFather2.toString());
            System.out.println(GrandMother2.toString());
            System.out.println();
            System.out.println(Father.toString());
            System.out.println(Mother.toString());
            System.out.println();
            System.out.println(child1.toString());
            System.out.println(child2.toString());
            System.out.println(child3.toString());
        }

        public static class Human
        {
            String name;
            boolean sex;
            int age;
            List<Human> children = new ArrayList<Human>();

        public Human(String name, boolean sex, int age, List<Human> children)
            {
                this.name = name;
                this.sex = sex;
                this.age  = age;
                this.children = children;
            }

            public String toString()
            {
                String text = "";
                text += "Имя: " + this.name;
                text += ", пол: " + (this.sex ? "мужской" : "женский");
                text += ", возраст: " + this.age;

                int childCount = this.children.size();
                if (childCount > 0)
                {
                    text += ", дети: "+this.children.get(0).name;

                    for (int i = 1; i < childCount; i++)
                    {
                        Human child = this.children.get(i);
                        text += ", "+child.name;
                    }
                }
                return text;
            }
    }
}

